{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/node.js","webpack:///./src/index.js","webpack:///./src/grid.js","webpack:///./node_modules/hammerjs/hammer.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","HexNodeType","SQRT_3","Math","sqrt","SQRT_3_2","SQRT_3_3","HexNode","q","this","type","FLAT_TOP","toPrimitive","hint","toString","cube","x","z","constructor","cartesian","size","round","undefined","y","Rq","Rr","Rs","dq","abs","dr","ds","range","output","lower","max","upper","min","push","obj","area","filter","__eq__","diff","subtract","add","dot","hexnode","HexGrid","pathHexagon","ctx","radius","flatten","beginPath","moveTo","lineTo","cos","PI","sin","closePath","window","hex","fillHexagon","fill","strokeHexagon","stroke","Hammer","node","setTimeoutContext","fn","timeout","context","setTimeout","bindFn","ShortPress","Press","clearTimeout","_timer1","_timer2","input","options","validPointers","pointers","length","validMovement","distance","threshold","validTime","deltaTime","time","_input","eventType","INPUT_END","INPUT_CANCEL","reset","INPUT_START","_timer","state","STATE_RECOGNIZED","console","log","STATE_FAILED","tryEmit","canvas","renderFunction","events","getContext","radiusPadding","hexagons","cameraSpeed","forEach","zoomTo","mc","Manager","recognizers","Tap","event","taps","posThreshold","recognizeWith","requireFailure","this_","get_coord","e","center","width","height","cart","zoomFocus","to_cartesian","hexRadius","from_cartesian","press","on","coord","performance","now","rad","zoomRadius","render","singletap","doubletap","addEventListener","resize","innerWidth","innerHeight","w","h","lerpTo","ease","index","focusStart","lerp","focusGoal","radiusGoal","radiusStart","step","requestAnimationFrame","clearRect","values","sort","a","b","hexagon","document","exportName","assign","VENDOR_PREFIXES","TEST_ELEMENT","createElement","TYPE_FUNCTION","Date","invokeArrayArg","arg","Array","isArray","each","iterator","deprecate","method","message","deprecationMessage","Error","stack","replace","warn","apply","arguments","target","TypeError","source","nextKey","extend","dest","src","merge","keys","inherit","child","base","properties","childP","baseP","_super","boolOrFn","val","args","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","removeEventListeners","removeEventListener","hasParent","parent","parentNode","inStr","str","find","indexOf","trim","split","inArray","findByKey","toArray","slice","uniqueArray","results","prefixed","prefix","prop","camelProp","toUpperCase","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","COMPUTE_INTERVAL","INPUT_MOVE","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","Input","manager","callback","self","inputTarget","domHandler","ev","enable","init","inputHandler","pointersLen","changedPointersLen","changedPointers","isFirst","isFinal","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","getCenter","timeStamp","angle","getAngle","getDistance","offset","offsetDelta","prevDelta","prevInput","deltaX","deltaY","computeDeltaXY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","scale","start","end","rotation","getRotation","maxPointers","velocity","velocityX","velocityY","direction","last","lastInterval","v","computeIntervalInputData","srcEvent","computeInputData","emit","recognize","clientX","clientY","p1","p2","props","atan2","evEl","evTarget","evWin","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","MouseInput","pressed","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","SingleTouchInput","started","touches","all","changed","changedTouches","concat","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","TouchInput","targetIds","allTouches","identifier","targetTouches","changedTargetTouches","touch","DEDUP_TIMEOUT","DEDUP_DISTANCE","TouchMouseInput","mouse","primaryTouch","lastTouches","setLastTouch","eventData","lastTouch","lts","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","dx","dy","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","getTouchActionProps","TouchAction","set","compute","actions","update","touchAction","recognizer","getTouchAction","hasPanX","hasPanY","cleanTouchActions","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_CANCELLED","Recognizer","defaults","id","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","preset","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","canEmit","inputDataClone","process","attrTest","optionPointers","isRecognized","isValid","directionTest","hasMoved","inOut","interval","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","inputClass","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","handlers","oldCssProps","toggleCssProps","item","stop","force","stopped","curRecognizer","existing","remove","off","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","triggerDomEvent","Pan","Swipe","Pinch","Rotate"],"mappings":"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","file":"hex.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const HexNodeType = {\n    'FLAT_TOP': 0,\n    'POINTED_TOP': 1\n};\n\nconst SQRT_3 = Math.sqrt(3.0);\nconst SQRT_3_2 = SQRT_3 / 2.0;\nconst SQRT_3_3 = SQRT_3 / 3.0;\n\nclass HexNode {\n    constructor(q, r) {\n        this.q = q;\n        this.r = r;\n        this.type = HexNodeType.FLAT_TOP;\n    }\n\n    [Symbol.toPrimitive](hint) {\n        return this.toString();\n    }\n\n    static from_cube(cube) {\n        var q = cube.x;\n        var r = cube.z;\n        return this.constructor(q, r);\n    }\n\n    static from_cartesian(cartesian, size, type, round) {\n        var q, r;\n        type = type === undefined ? HexNodeType.FLAT_TOP : type;\n        round = round === undefined ? true : round;\n        if(type == HexNodeType.FLAT_TOP) {\n            q = 2 * cartesian.x / (3.0 * size);\n            r = (- cartesian.x / 3.0 + SQRT_3_3 * cartesian.y) / (1.0 * size);\n        } else {\n            q = (SQRT_3_3 * cartesian.x - cartesian.y / 3.0) / (1.0 * size);\n            r = 2 * cartesian.y / (3.0 * size);\n        }\n\n        return (new this(q, r)).round();\n    }\n\n    toString() {\n        return 'HexNode(' + this.q + ',' + this.r + ')';\n    }\n\n    get s() { return -this.q - this.r; }\n    x(size) { \n        if(this.type == HexNodeType.FLAT_TOP) {\n            return size * 1.5 * this.q;\n        } else {\n            x = size * (SQRT_3 * this.q + SQRT_3_2 * this.r);\n        }\n        return x;\n    }\n\n    y(size) { \n        if(this.type == HexNodeType.FLAT_TOP) {\n            return size * (SQRT_3_2 * this.q + SQRT_3 * this.r);\n        } else {\n            return size * 1.5 * this.r;\n        }\n    }\n\n    round() {\n        var Rq = Math.round(this.q);\n        var Rr = Math.round(this.r);\n        var Rs = Math.round(this.s);\n\n        var dq = Math.abs(dq - this.q)\n        var dr = Math.abs(dr - this.r)\n        var ds = Math.abs(ds - this.s)\n\n        if(dq > ds && dq > dr) {\n            Rq = - Rr - Rs;\n        } else if(ds > dr) {\n            Rs = - Rq - Rr;\n        } else {\n            Rr = - Rq - Rs;\n        }\n\n        return new this.constructor(Rq, Rr);\n    }\n\n    to_cube() {\n        return {x: this.q, y: this.s, z: this.r}\n    }\n\n    to_cartesian(size) {\n        var x, y;\n        if(this.type == HexNodeType.FLAT_TOP) {\n            x = size * 1.5 * this.q;\n            y = size * (SQRT_3_2 * this.q + SQRT_3 * this.r);\n        } else {\n            x = size * (SQRT_3 * this.q + SQRT_3_2 * this.r);\n            y = size * 1.5 * this.r;\n        }\n        return {x: x, y: y};\n    }\n\n    area(range) {\n        var output = [];\n        for(var q = -range; q <= range; q++) {\n            var lower = Math.max(-range, -q - range);\n            var upper = Math.min(range, -q + range);\n            for(var s = lower; s <= upper; s++) {\n                var r = - q -s\n                output.push(new this.constructor(this.q + q, this.r + r));\n            }\n        }\n\n        return output;\n    }\n\n    __eq__(obj) {\n        return obj.q == this.q && obj.r == this.r;\n    }\n\n    neighbours() {\n        return this.area(1).filter(x => !this.__eq__(x));\n    }\n\n    add(obj) {\n        return new this.constructor(this.q + obj.q, this.r + obj.r);\n    }\n\n    subtract(obj) {\n        return new this.constructor(this.q - obj.q, this.r - obj.r);\n    }\n\n    dot(m) {\n        return new this.constructor(this.q * m, this.r * m);\n    }\n\n    lerp(obj, i) {\n        var diff = obj.subtract(this);\n        return this.add(diff.dot(i));\n    }\n\n}\n\nmodule.exports = { \n    HexNode: HexNode,\n    HexNodeType: HexNodeType\n}\n","var hexnode = require('./node.js');\nvar HexGrid = require('./grid.js');\n\nfunction pathHexagon(ctx, x, y, radius, flatten) {\n    flatten = flatten === undefined ? 1 : flatten;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, flatten * y);\n    for(var i=1; i<6; i+= 1) {\n        ctx.lineTo(x + radius * Math.cos(Math.PI * i / 3.0), \n                   flatten * y + radius * Math.sin(Math.PI * i / 3.0));\n    }\n    ctx.closePath();\n}\n\nfunction fillHexagon(ctx, x, y, radius, flatten) {\n    pathHexagon(ctx, x, y, radius, flatten);\n    ctx.fill();\n}\n\nfunction strokeHexagon(ctx, x, y, radius, flatten) {\n    pathHexagon(ctx, x, y, radius, flatten);\n    ctx.stroke();\n}\n\nwindow.hex = module.exports = {\n    HexGrid: HexGrid,\n    HexNode: hexnode.HexNode,\n    HexNodeType: hexnode.HexNodeType,\n    fillHexagon: fillHexagon,\n    strokeHexagon: strokeHexagon,\n}\n","var Hammer = require('hammerjs');\nvar node = require('./node.js');\n\nconst SQRT_3 = Math.sqrt(3.0);\n\nfunction ease(time) {\n    var t = time * time;\n    return t / ( 2.0 * (t - time) + 1.0);\n    //return time * time * (2.5 - 1.5 * time);\n}\n\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(Hammer.bindFn(fn, context), timeout);\n}\n\nclass ShortPress extends Hammer.Press {\n    reset() {\n        clearTimeout(this._timer1);\n        clearTimeout(this._timer2);\n    }\n\n    process(input) {\n    let { options } = this;\n    let validPointers = input.pointers.length === options.pointers;\n    let validMovement = input.distance < options.threshold;\n    let validTime = input.deltaTime > options.time && input.deltaTime < options.timeout;\n\n    this._input = input;\n\n    // we only allow little movement\n    // and we've reached an end event, so a tap is possible\n    if (!validMovement || !validPointers || (input.eventType & (Hammer.INPUT_END | Hammer.INPUT_CANCEL) && !validTime)) {\n      this.reset();\n    } else if (input.eventType & Hammer.INPUT_START) {\n      this.reset();\n      this._timer = setTimeoutContext(() => {\n        this.state = Hammer.STATE_RECOGNIZED;\n          console.log(\"recog\", this.state, this);\n      }, options.time, this);\n\n      this._timer2 = setTimeoutContext(() => {\n        console.log(\"FAILED\", this.state, this);\n        this.state = Hammer.STATE_FAILED;\n      }, options.timeout, this);\n\n\n    } else if (input.eventType & Hammer.INPUT_END) {\n        this.reset();\n        this.state = Hammer.STATE_RECOGNIZED;\n        this.tryEmit();\n      return Hammer.STATE_RECOGNIZED;\n    }\n    return Hammer.STATE_FAILED;\n  }\n}\n\nclass HexGrid {\n    constructor(canvas, radius, renderFunction, events) {\n        this.canvas = canvas;\n        this.ctx = canvas.getContext('2d');\n        radius = radius === undefined ? 5 : radius;\n        this.radiusPadding = 1;\n\n        this.radius = radius;\n        this.renderFunction = renderFunction;\n        this.hexagons = {}\n        this.cameraSpeed = 0.02;\n\n        new node.HexNode(0, 0).area(radius).forEach(hex => { return this.hexagons[hex.toString()] = {\n            node: hex,\n            state: undefined,\n        }});\n\n        this.zoomTo();\n\n        this.mc = new Hammer.Manager(this.canvas, { recognizers: []});\n\n        this.mc.add(new Hammer.Tap({event: 'doubletap', taps: 2, posThreshold: 20}))\n        this.mc.add(new Hammer.Tap({event: 'singletap', posThreshold: 20}))\n        this.mc.get('doubletap').recognizeWith('singletap');\n        this.mc.get('singletap').requireFailure('doubletap');\n\n        this.mc.add(new Hammer.Press({event: 'longpress', time: 1000, threshold: 20}))\n        this.mc.add(new ShortPress({event: 'shortpress', time: 300, timeout: 1000, threshold: 20}))\n\n        var this_ = this;\n        var zoom_start = undefined;\n\n        function get_coord(e) {\n            var cartesian = {x: e.center.x, y: e.center.y};\n            cartesian.x -= this_.canvas.width / 2.0;\n            cartesian.y -= this_.canvas.height / 2.0;\n            var cart = this_.zoomFocus.to_cartesian(this_.hexRadius);\n            cartesian.x += cart.x;\n            cartesian.y += cart.y;\n            return node.HexNode.from_cartesian(cartesian, this_.hexRadius);\n        }\n\n        if(events.press !== undefined) {\n            this.mc.on('shortpress', function(e) {\n                var coord = get_coord(e);\n                if(this_.hexagons[coord] !== undefined) {\n                    events.press(this_.hexagons[coord]);\n                }\n            });\n        }\n\n\n        this.mc.on('longpress', function(e) {\n            var coord = get_coord(e);\n            console.log('longpress', performance.now(), e, e.deltaTime)\n            var rad = this_.zoomRadius;\n\n            if(this_.hexagons[coord] === undefined)\n                return;\n\n            if(coord.__eq__(this_.zoomFocus)) {\n                rad -= 1;\n                if(rad < 0 )\n                    rad = this_.radius + this_.radiusPadding;\n                console.log(\"zoomRadius\", rad);\n            }\n            this_.zoomTo(coord, rad);\n            this_.render();\n        });\n\n\n        if(events.singletap !== undefined) {\n            this.mc.on('singletap', function(e) {\n                var coord = get_coord(e);\n                if(this_.hexagons[coord] !== undefined) {\n                    events.singletap(this_.hexagons[coord]);\n                }\n            });\n        }\n\n        if(events.doubletap !== undefined) {\n            this.mc.on('doubletap', function(e) {\n                var coord = get_coord(e);\n                if(this_.hexagons[coord] !== undefined) {\n                    events.doubletap(this_.hexagons[coord]);\n                }\n            });\n        }\n\n        window.addEventListener('resize', () => { this_.resize(); });\n        this.resize();\n    }\n\n    resize() { \n        this.canvas.width = window.innerWidth;\n        this.canvas.height = window.innerHeight;\n        this.render();\n    }\n\n    get hexRadius() {\n        var n = (2 * (this.zoomRadius) + 1)\n        var w = this.canvas.width / (0.5 + 1.5 * n);\n        var h = this.canvas.height / (SQRT_3 * n);\n        return Math.min(w, h);\n    }\n\n    zoomTo(coord, radius) {\n        coord = coord === undefined ? new node.HexNode(0, 0) : coord;\n        radius = radius === undefined ? this.radius + this.radiusPadding: radius;\n\n        var this_ = this;\n        if(this.zoomFocus !== undefined) {\n            function lerpTo() {\n                var t = ease(lerpTo.index);\n                this_.zoomFocus = lerpTo.focusStart.lerp(lerpTo.focusGoal, t);\n                this_.zoomRadius = (lerpTo.radiusGoal - lerpTo.radiusStart) * t * 1.0 + 1.0 * lerpTo.radiusStart;\n                if(lerpTo.index < 1) {\n                    lerpTo.index += lerpTo.step;\n                    if(lerpTo.index >= 1)\n                        lerpTo.index = 1;\n                    this_.render();\n                    requestAnimationFrame(lerpTo);\n                }\n            }\n            lerpTo.focusGoal = coord;\n            lerpTo.focusStart = this.zoomFocus;\n            lerpTo.radiusGoal = radius;\n            lerpTo.radiusStart = this.zoomRadius;\n\n            lerpTo.index = 0;\n            lerpTo.step = this.cameraSpeed;\n\n            lerpTo()\n        } else {\n            this.zoomFocus = coord;\n            this.zoomRadius = radius;\n        }\n    }\n\n    render() {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        Object.values(this.hexagons).sort((a, b) => { \n            var ay = a.node.y(1);\n            var by = b.node.y(1);\n            if(ay > by) {\n                return 1;\n            } else {\n                return -1;\n            }\n        }).forEach(hexagon => {\n            var cartesian = hexagon.node.subtract(this.zoomFocus).to_cartesian(this.hexRadius);\n            cartesian.x += this.canvas.width / 2.0;\n            cartesian.y += this.canvas.height / 2.0;\n\n            this.renderFunction(this.ctx, cartesian, this.hexRadius, hexagon.state)\n        });\n    }\n}\n\nmodule.exports = HexGrid;\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n"],"sourceRoot":""}